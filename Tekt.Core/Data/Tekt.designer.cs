#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18047
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tekt.Core.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="C:\\USERS\\THEZER0IST\\TETKSYS\\TETKSYS\\TEKT.WEB\\APP_DATA\\TEKTDEVDB.MDF")]
	public partial class TektDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProject(Tekt.Core.Data.Entities.Project instance);
    partial void UpdateProject(Tekt.Core.Data.Entities.Project instance);
    partial void DeleteProject(Tekt.Core.Data.Entities.Project instance);
    partial void InsertItem(Tekt.Core.Data.Entities.Item instance);
    partial void UpdateItem(Tekt.Core.Data.Entities.Item instance);
    partial void DeleteItem(Tekt.Core.Data.Entities.Item instance);
    partial void InsertItemProject(Tekt.Core.Data.Entities.ItemProject instance);
    partial void UpdateItemProject(Tekt.Core.Data.Entities.ItemProject instance);
    partial void DeleteItemProject(Tekt.Core.Data.Entities.ItemProject instance);
    #endregion
		
		public TektDataContext() : 
				base(global::Tekt.Core.Properties.Settings.Default.C__USERS_THEZER0IST_TETKSYS_TETKSYS_TEKT_WEB_APP_DATA_TEKTDEVDB_MDFConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TektDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TektDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TektDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TektDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Tekt.Core.Data.Entities.Project> Projects
		{
			get
			{
				return this.GetTable<Tekt.Core.Data.Entities.Project>();
			}
		}
		
		public System.Data.Linq.Table<Tekt.Core.Data.Entities.Item> Items
		{
			get
			{
				return this.GetTable<Tekt.Core.Data.Entities.Item>();
			}
		}
		
		public System.Data.Linq.Table<Tekt.Core.Data.Entities.ItemProject> ItemProjects
		{
			get
			{
				return this.GetTable<Tekt.Core.Data.Entities.ItemProject>();
			}
		}
	}
}
namespace Tekt.Core.Data.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Projects")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Key;
		
		private string _Title;
		
		private string _Description;
		
		private string _Summary;
		
		private string _PropertiesJson;
		
		private EntitySet<ItemProject> _ProjectItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSummaryChanging(string value);
    partial void OnSummaryChanged();
    partial void OnPropertiesJsonChanging(string value);
    partial void OnPropertiesJsonChanged();
    #endregion
		
		public Project()
		{
			this._ProjectItems = new EntitySet<ItemProject>(new Action<ItemProject>(this.attach_ProjectItems), new Action<ItemProject>(this.detach_ProjectItems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Summary", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Summary
		{
			get
			{
				return this._Summary;
			}
			set
			{
				if ((this._Summary != value))
				{
					this.OnSummaryChanging(value);
					this.SendPropertyChanging();
					this._Summary = value;
					this.SendPropertyChanged("Summary");
					this.OnSummaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Properties", Storage="_PropertiesJson", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		private string PropertiesJson
		{
			get
			{
				return this._PropertiesJson;
			}
			set
			{
				if ((this._PropertiesJson != value))
				{
					this.OnPropertiesJsonChanging(value);
					this.SendPropertyChanging();
					this._PropertiesJson = value;
					this.SendPropertyChanged("PropertiesJson");
					this.OnPropertiesJsonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ItemProject", Storage="_ProjectItems", ThisKey="Id", OtherKey="ProjectId")]
		public EntitySet<ItemProject> ProjectItems
		{
			get
			{
				return this._ProjectItems;
			}
			set
			{
				this._ProjectItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProjectItems(ItemProject entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_ProjectItems(ItemProject entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Items")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Key;
		
		private string _Type;
		
		private string _Title;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _DetailUrl;
		
		private string _Content;
		
		private string _ContentUrl;
		
		private System.Nullable<int> _Width;
		
		private System.Nullable<int> _Height;
		
		private System.Nullable<int> _ThumbWidth;
		
		private System.Nullable<int> _ThumbHeight;
		
		private string _ThumbUrl;
		
		private string _PropertiesJson;
		
		private System.DateTime _Updated;
		
		private EntitySet<ItemProject> _ItemProjects;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnKeyChanging(string value);
    partial void OnKeyChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnDetailUrlChanging(string value);
    partial void OnDetailUrlChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnContentUrlChanging(string value);
    partial void OnContentUrlChanged();
    partial void OnWidthChanging(System.Nullable<int> value);
    partial void OnWidthChanged();
    partial void OnHeightChanging(System.Nullable<int> value);
    partial void OnHeightChanged();
    partial void OnThumbWidthChanging(System.Nullable<int> value);
    partial void OnThumbWidthChanged();
    partial void OnThumbHeightChanging(System.Nullable<int> value);
    partial void OnThumbHeightChanged();
    partial void OnThumbUrlChanging(string value);
    partial void OnThumbUrlChanged();
    partial void OnPropertiesJsonChanging(string value);
    partial void OnPropertiesJsonChanged();
    partial void OnUpdatedChanging(System.DateTime value);
    partial void OnUpdatedChanged();
    #endregion
		
		public Item()
		{
			this._ItemProjects = new EntitySet<ItemProject>(new Action<ItemProject>(this.attach_ItemProjects), new Action<ItemProject>(this.detach_ItemProjects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Key]", Storage="_Key", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Key
		{
			get
			{
				return this._Key;
			}
			set
			{
				if ((this._Key != value))
				{
					this.OnKeyChanging(value);
					this.SendPropertyChanging();
					this._Key = value;
					this.SendPropertyChanged("Key");
					this.OnKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(MAX)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailUrl", DbType="NVarChar(MAX)")]
		public string DetailUrl
		{
			get
			{
				return this._DetailUrl;
			}
			set
			{
				if ((this._DetailUrl != value))
				{
					this.OnDetailUrlChanging(value);
					this.SendPropertyChanging();
					this._DetailUrl = value;
					this.SendPropertyChanged("DetailUrl");
					this.OnDetailUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Content", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentUrl", DbType="NVarChar(MAX)")]
		public string ContentUrl
		{
			get
			{
				return this._ContentUrl;
			}
			set
			{
				if ((this._ContentUrl != value))
				{
					this.OnContentUrlChanging(value);
					this.SendPropertyChanging();
					this._ContentUrl = value;
					this.SendPropertyChanged("ContentUrl");
					this.OnContentUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int")]
		public System.Nullable<int> Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int")]
		public System.Nullable<int> Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThumbWidth", DbType="Int")]
		public System.Nullable<int> ThumbWidth
		{
			get
			{
				return this._ThumbWidth;
			}
			set
			{
				if ((this._ThumbWidth != value))
				{
					this.OnThumbWidthChanging(value);
					this.SendPropertyChanging();
					this._ThumbWidth = value;
					this.SendPropertyChanged("ThumbWidth");
					this.OnThumbWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThumbHeight", DbType="Int")]
		public System.Nullable<int> ThumbHeight
		{
			get
			{
				return this._ThumbHeight;
			}
			set
			{
				if ((this._ThumbHeight != value))
				{
					this.OnThumbHeightChanging(value);
					this.SendPropertyChanging();
					this._ThumbHeight = value;
					this.SendPropertyChanged("ThumbHeight");
					this.OnThumbHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThumbUrl", DbType="NVarChar(MAX)")]
		public string ThumbUrl
		{
			get
			{
				return this._ThumbUrl;
			}
			set
			{
				if ((this._ThumbUrl != value))
				{
					this.OnThumbUrlChanging(value);
					this.SendPropertyChanging();
					this._ThumbUrl = value;
					this.SendPropertyChanged("ThumbUrl");
					this.OnThumbUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Properties", Storage="_PropertiesJson", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		private string PropertiesJson
		{
			get
			{
				return this._PropertiesJson;
			}
			set
			{
				if ((this._PropertiesJson != value))
				{
					this.OnPropertiesJsonChanging(value);
					this.SendPropertyChanging();
					this._PropertiesJson = value;
					this.SendPropertyChanged("PropertiesJson");
					this.OnPropertiesJsonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated", DbType="DateTime NOT NULL")]
		public System.DateTime Updated
		{
			get
			{
				return this._Updated;
			}
			set
			{
				if ((this._Updated != value))
				{
					this.OnUpdatedChanging(value);
					this.SendPropertyChanging();
					this._Updated = value;
					this.SendPropertyChanged("Updated");
					this.OnUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ItemProject", Storage="_ItemProjects", ThisKey="Id", OtherKey="ItemId")]
		public EntitySet<ItemProject> ItemProjects
		{
			get
			{
				return this._ItemProjects;
			}
			set
			{
				this._ItemProjects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ItemProjects(ItemProject entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_ItemProjects(ItemProject entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
	}
	
	public partial class Commit : Item
	{
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    #endregion
		
		public Commit()
		{
			OnCreated();
		}
	}
	
	public partial class Image : Item
	{
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    #endregion
		
		public Image()
		{
			OnCreated();
		}
	}
	
	public partial class BlogEntry : Item
	{
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    #endregion
		
		public BlogEntry()
		{
			OnCreated();
		}
	}
	
	public partial class Video : Item
	{
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    #endregion
		
		public Video()
		{
			OnCreated();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemProjects")]
	public partial class ItemProject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ItemId;
		
		private int _ProjectId;
		
		private EntityRef<Item> _Item;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIdChanging(int value);
    partial void OnItemIdChanged();
    partial void OnProjectIdChanging(int value);
    partial void OnProjectIdChanged();
    #endregion
		
		public ItemProject()
		{
			this._Item = default(EntityRef<Item>);
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ItemId
		{
			get
			{
				return this._ItemId;
			}
			set
			{
				if ((this._ItemId != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIdChanging(value);
					this.SendPropertyChanging();
					this._ItemId = value;
					this.SendPropertyChanged("ItemId");
					this.OnItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_ItemProject", Storage="_Item", ThisKey="ItemId", OtherKey="Id", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.ItemProjects.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.ItemProjects.Add(this);
						this._ItemId = value.Id;
					}
					else
					{
						this._ItemId = default(int);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ItemProject", Storage="_Project", ThisKey="ProjectId", OtherKey="Id", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.ProjectItems.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.ProjectItems.Add(this);
						this._ProjectId = value.Id;
					}
					else
					{
						this._ProjectId = default(int);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
